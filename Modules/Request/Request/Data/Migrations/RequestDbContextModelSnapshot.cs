// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Request.Data;

#nullable disable

namespace Request.Data.Migrations
{
    [DbContext(typeof(RequestDbContext))]
    partial class RequestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("request")
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Request.RequestComments.Models.RequestComment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("RequestId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("RequestComments", "request");
                });

            modelBuilder.Entity("Request.RequestTitles.Models.RequestTitle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BuildingType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CollateralType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NoOfBuilding")
                        .HasColumnType("int");

                    b.Property<string>("Owner")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<long>("RequestId")
                        .HasColumnType("bigint");

                    b.Property<string>("TitleDetail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TitleNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("UsageArea")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.HasKey("Id");

                    b.ToTable("RequestTitles", "request");
                });

            modelBuilder.Entity("Request.Requests.Models.Request", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Requests", "request");
                });

            modelBuilder.Entity("Request.RequestTitles.Models.RequestTitle", b =>
                {
                    b.OwnsOne("Request.Requests.ValueObjects.Address", "DopaAddress", b1 =>
                        {
                            b1.Property<long>("RequestTitleId")
                                .HasColumnType("bigint");

                            b1.Property<string>("BuildingNo")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("DopaBuildingNo");

                            b1.Property<string>("District")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("DopaDistrict");

                            b1.Property<string>("FloorNo")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("DopaFloorNo");

                            b1.Property<string>("HouseNo")
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("DopaHouseNo");

                            b1.Property<string>("Moo")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("DopaMoo");

                            b1.Property<string>("Postcode")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("DopaPostcode");

                            b1.Property<string>("Province")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("DopaProvince");

                            b1.Property<string>("Road")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("DopaRoad");

                            b1.Property<string>("RoomNo")
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("DopaRoomNo");

                            b1.Property<string>("Soi")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("DopaSoi");

                            b1.Property<string>("SubDistrict")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("DopaSubDistrict");

                            b1.HasKey("RequestTitleId");

                            b1.ToTable("RequestTitles", "request");

                            b1.WithOwner()
                                .HasForeignKey("RequestTitleId");
                        });

                    b.OwnsOne("Request.Requests.ValueObjects.Address", "TitleAddress", b1 =>
                        {
                            b1.Property<long>("RequestTitleId")
                                .HasColumnType("bigint");

                            b1.Property<string>("BuildingNo")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("BuildingNo");

                            b1.Property<string>("District")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("District");

                            b1.Property<string>("FloorNo")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("FloorNo");

                            b1.Property<string>("HouseNo")
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("HouseNo");

                            b1.Property<string>("Moo")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Moo");

                            b1.Property<string>("Postcode")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("Postcode");

                            b1.Property<string>("Province")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("Province");

                            b1.Property<string>("Road")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Road");

                            b1.Property<string>("RoomNo")
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("RoomNo");

                            b1.Property<string>("Soi")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Soi");

                            b1.Property<string>("SubDistrict")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("SubDistrict");

                            b1.HasKey("RequestTitleId");

                            b1.ToTable("RequestTitles", "request");

                            b1.WithOwner()
                                .HasForeignKey("RequestTitleId");
                        });

                    b.OwnsOne("Request.RequestTitles.ValueObjects.LandArea", "LandArea", b1 =>
                        {
                            b1.Property<long>("RequestTitleId")
                                .HasColumnType("bigint");

                            b1.Property<int?>("Ngan")
                                .HasColumnType("int")
                                .HasColumnName("Ngan");

                            b1.Property<int?>("Rai")
                                .HasColumnType("int")
                                .HasColumnName("Rai");

                            b1.Property<decimal?>("Wa")
                                .HasPrecision(4, 2)
                                .HasColumnType("decimal(4,2)")
                                .HasColumnName("Wa");

                            b1.HasKey("RequestTitleId");

                            b1.ToTable("RequestTitles", "request");

                            b1.WithOwner()
                                .HasForeignKey("RequestTitleId");
                        });

                    b.OwnsOne("Request.RequestTitles.ValueObjects.Machine", "Machine", b1 =>
                        {
                            b1.Property<long>("RequestTitleId")
                                .HasColumnType("bigint");

                            b1.Property<string>("MachineInvoiceNo")
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("MachineInvoiceNo");

                            b1.Property<string>("MachineRegistrationNo")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("MachineRegistrationNo");

                            b1.Property<string>("MachineRegistrationStatus")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("MachineRegistrationStatus");

                            b1.Property<string>("MachineStatus")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("MachineStatus");

                            b1.Property<string>("MachineType")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("MachineType");

                            b1.HasKey("RequestTitleId");

                            b1.ToTable("RequestTitles", "request");

                            b1.WithOwner()
                                .HasForeignKey("RequestTitleId");
                        });

                    b.OwnsOne("Request.RequestTitles.ValueObjects.Vehicle", "Vehicle", b1 =>
                        {
                            b1.Property<long>("RequestTitleId")
                                .HasColumnType("bigint");

                            b1.Property<string>("VehicleLocation")
                                .HasMaxLength(300)
                                .HasColumnType("nvarchar(300)")
                                .HasColumnName("VehicleLocation");

                            b1.Property<string>("VehicleRegistrationNo")
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("VehicleRegistrationNo");

                            b1.Property<string>("VehicleType")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("VehicleType");

                            b1.HasKey("RequestTitleId");

                            b1.ToTable("RequestTitles", "request");

                            b1.WithOwner()
                                .HasForeignKey("RequestTitleId");
                        });

                    b.Navigation("DopaAddress")
                        .IsRequired();

                    b.Navigation("LandArea")
                        .IsRequired();

                    b.Navigation("Machine")
                        .IsRequired();

                    b.Navigation("TitleAddress")
                        .IsRequired();

                    b.Navigation("Vehicle")
                        .IsRequired();
                });

            modelBuilder.Entity("Request.Requests.Models.Request", b =>
                {
                    b.OwnsOne("Request.Requests.ValueObjects.AppraisalNumber", "AppraisalNo", b1 =>
                        {
                            b1.Property<long>("RequestId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("AppraisalNo");

                            b1.HasKey("RequestId");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .HasFilter("[AppraisalNo] IS NOT NULL");

                            b1.ToTable("Requests", "request");

                            b1.WithOwner()
                                .HasForeignKey("RequestId");
                        });

                    b.OwnsMany("Request.Requests.ValueObjects.RequestCustomer", "Customers", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"));

                            b1.Property<string>("ContactNumber")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("ContactNumber");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)")
                                .HasColumnName("Name");

                            b1.Property<long>("RequestId")
                                .HasColumnType("bigint");

                            b1.HasKey("Id");

                            b1.HasIndex("RequestId");

                            b1.ToTable("RequestCustomers", "request");

                            b1.WithOwner()
                                .HasForeignKey("RequestId");
                        });

                    b.OwnsOne("Request.Requests.ValueObjects.RequestDetail", "Detail", b1 =>
                        {
                            b1.Property<long>("RequestId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Channel")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("Channel");

                            b1.Property<bool>("HasAppraisalBook")
                                .HasColumnType("bit")
                                .HasColumnName("HasAppraisalBook");

                            b1.Property<int?>("OccurConstInspec")
                                .HasColumnType("int")
                                .HasColumnName("OccurConstInspec");

                            b1.Property<string>("Priority")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("Priority");

                            b1.Property<string>("Purpose")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("Purpose");

                            b1.HasKey("RequestId");

                            b1.ToTable("RequestDetails", "request");

                            b1.WithOwner()
                                .HasForeignKey("RequestId");

                            b1.OwnsOne("Request.Requests.ValueObjects.Contact", "Contact", b2 =>
                                {
                                    b2.Property<long>("RequestDetailRequestId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("ContactPersonContactNo")
                                        .IsRequired()
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)")
                                        .HasColumnName("ContactPersonContactNo");

                                    b2.Property<string>("ContactPersonName")
                                        .IsRequired()
                                        .HasMaxLength(80)
                                        .HasColumnType("nvarchar(80)")
                                        .HasColumnName("ContactPersonName");

                                    b2.Property<string>("ProjectCode")
                                        .HasMaxLength(10)
                                        .HasColumnType("nvarchar(10)")
                                        .HasColumnName("ProjectCode");

                                    b2.HasKey("RequestDetailRequestId");

                                    b2.ToTable("RequestDetails", "request");

                                    b2.WithOwner()
                                        .HasForeignKey("RequestDetailRequestId");
                                });

                            b1.OwnsOne("Request.Requests.ValueObjects.Fee", "Fee", b2 =>
                                {
                                    b2.Property<long>("RequestDetailRequestId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("FeeRemark")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("FeeRemark");

                                    b2.Property<string>("FeeType")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("FeeType");

                                    b2.HasKey("RequestDetailRequestId");

                                    b2.ToTable("RequestDetails", "request");

                                    b2.WithOwner()
                                        .HasForeignKey("RequestDetailRequestId");
                                });

                            b1.OwnsOne("Request.Requests.ValueObjects.LoanDetail", "LoanDetail", b2 =>
                                {
                                    b2.Property<long>("RequestDetailRequestId")
                                        .HasColumnType("bigint");

                                    b2.Property<decimal?>("LimitAmt")
                                        .HasPrecision(19, 4)
                                        .HasColumnType("decimal(19,4)")
                                        .HasColumnName("LimitAmt");

                                    b2.Property<string>("LoanApplicationNo")
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)")
                                        .HasColumnName("LoanApplicationNo");

                                    b2.Property<decimal?>("TotalSellingPrice")
                                        .HasPrecision(19, 4)
                                        .HasColumnType("decimal(19,4)")
                                        .HasColumnName("TotalSellingPrice");

                                    b2.HasKey("RequestDetailRequestId");

                                    b2.ToTable("RequestDetails", "request");

                                    b2.WithOwner()
                                        .HasForeignKey("RequestDetailRequestId");
                                });

                            b1.OwnsOne("Request.Requests.ValueObjects.Reference", "Reference", b2 =>
                                {
                                    b2.Property<long>("RequestDetailRequestId")
                                        .HasColumnType("bigint");

                                    b2.Property<DateTime?>("PrevAppraisalDate")
                                        .HasColumnType("datetime2")
                                        .HasColumnName("PrevAppraisalDate");

                                    b2.Property<string>("PrevAppraisalNo")
                                        .HasMaxLength(10)
                                        .HasColumnType("nvarchar(10)")
                                        .HasColumnName("PrevAppraisalNo");

                                    b2.Property<decimal?>("PrevAppraisalValue")
                                        .HasPrecision(19, 4)
                                        .HasColumnType("decimal(19,4)")
                                        .HasColumnName("PrevAppraisalValue");

                                    b2.HasKey("RequestDetailRequestId");

                                    b2.ToTable("RequestDetails", "request");

                                    b2.WithOwner()
                                        .HasForeignKey("RequestDetailRequestId");
                                });

                            b1.OwnsOne("Request.Requests.ValueObjects.Address", "Address", b2 =>
                                {
                                    b2.Property<long>("RequestDetailRequestId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("District")
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("District");

                                    b2.Property<string>("FloorNo")
                                        .HasMaxLength(10)
                                        .HasColumnType("nvarchar(10)")
                                        .HasColumnName("FloorNo");

                                    b2.Property<string>("HouseNo")
                                        .HasMaxLength(30)
                                        .HasColumnType("nvarchar(30)")
                                        .HasColumnName("HouseNo");

                                    b2.Property<string>("Moo")
                                        .HasMaxLength(50)
                                        .HasColumnType("nvarchar(50)")
                                        .HasColumnName("Moo");

                                    b2.Property<string>("Postcode")
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("Postcode");

                                    b2.Property<string>("ProjectName")
                                        .HasMaxLength(50)
                                        .HasColumnType("nvarchar(50)")
                                        .HasColumnName("LocationIdentifier");

                                    b2.Property<string>("Province")
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("Province");

                                    b2.Property<string>("Road")
                                        .HasMaxLength(50)
                                        .HasColumnType("nvarchar(50)")
                                        .HasColumnName("Road");

                                    b2.Property<string>("RoomNo")
                                        .HasMaxLength(30)
                                        .HasColumnType("nvarchar(30)")
                                        .HasColumnName("RoomNo");

                                    b2.Property<string>("Soi")
                                        .HasMaxLength(50)
                                        .HasColumnType("nvarchar(50)")
                                        .HasColumnName("Soi");

                                    b2.Property<string>("SubDistrict")
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("SubDistrict");

                                    b2.HasKey("RequestDetailRequestId");

                                    b2.ToTable("RequestDetails", "request");

                                    b2.WithOwner()
                                        .HasForeignKey("RequestDetailRequestId");
                                });

                            b1.OwnsOne("Request.Requests.ValueObjects.Requestor", "Requestor", b2 =>
                                {
                                    b2.Property<long>("RequestDetailRequestId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("RequestorAo")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("RequestorAo");

                                    b2.Property<string>("RequestorBranch")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("RequestorBranch");

                                    b2.Property<string>("RequestorBusinessUnit")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("RequestorBusinessUnit");

                                    b2.Property<string>("RequestorContactNo")
                                        .IsRequired()
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)")
                                        .HasColumnName("RequestorContactNo");

                                    b2.Property<string>("RequestorCostCenter")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("RequestorCostCenter");

                                    b2.Property<string>("RequestorDepartment")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("RequestorDepartment");

                                    b2.Property<string>("RequestorEmail")
                                        .IsRequired()
                                        .HasMaxLength(40)
                                        .HasColumnType("nvarchar(40)")
                                        .HasColumnName("RequestorEmail");

                                    b2.Property<string>("RequestorEmpId")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("RequestorEmpId");

                                    b2.Property<string>("RequestorName")
                                        .IsRequired()
                                        .HasMaxLength(40)
                                        .HasColumnType("nvarchar(40)")
                                        .HasColumnName("RequestorName");

                                    b2.Property<string>("RequestorSection")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("RequestorSection");

                                    b2.HasKey("RequestDetailRequestId");

                                    b2.ToTable("RequestDetails", "request");

                                    b2.WithOwner()
                                        .HasForeignKey("RequestDetailRequestId");
                                });

                            b1.Navigation("Address")
                                .IsRequired();

                            b1.Navigation("Contact")
                                .IsRequired();

                            b1.Navigation("Fee")
                                .IsRequired();

                            b1.Navigation("LoanDetail")
                                .IsRequired();

                            b1.Navigation("Reference")
                                .IsRequired();

                            b1.Navigation("Requestor")
                                .IsRequired();
                        });

                    b.OwnsMany("Request.Requests.ValueObjects.RequestProperty", "Properties", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"));

                            b1.Property<string>("BuildingType")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("BuildingType");

                            b1.Property<string>("PropertyType")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("PropertyType");

                            b1.Property<long>("RequestId")
                                .HasColumnType("bigint");

                            b1.Property<decimal?>("SellingPrice")
                                .HasPrecision(19, 4)
                                .HasColumnType("decimal(19,4)")
                                .HasColumnName("SellingPrice");

                            b1.HasKey("Id");

                            b1.HasIndex("RequestId");

                            b1.ToTable("RequestProperties", "request");

                            b1.WithOwner()
                                .HasForeignKey("RequestId");
                        });

                    b.OwnsOne("Request.Requests.ValueObjects.RequestStatus", "Status", b1 =>
                        {
                            b1.Property<long>("RequestId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Code")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("Status");

                            b1.HasKey("RequestId");

                            b1.ToTable("Requests", "request");

                            b1.WithOwner()
                                .HasForeignKey("RequestId");
                        });

                    b.Navigation("AppraisalNo");

                    b.Navigation("Customers");

                    b.Navigation("Detail")
                        .IsRequired();

                    b.Navigation("Properties");

                    b.Navigation("Status")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
