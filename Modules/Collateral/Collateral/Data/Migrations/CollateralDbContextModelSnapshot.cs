// <auto-generated />
using System;
using Collateral.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Collateral.Data.Migrations
{
    [DbContext(typeof(CollateralDbContext))]
    partial class CollateralDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("collateral")
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Collateral.CollateralMachines.Models.CollateralMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("MachineId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ChassisNo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<long>("CollatId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CollatId")
                        .IsUnique();

                    b.ToTable("CollateralMachines", "collateral");
                });

            modelBuilder.Entity("Collateral.CollateralMachines.Models.MachineAppraisalAdditionalInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("MachDetId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ApprId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MachineAppraisalAdditionalInfos", "collateral");
                });

            modelBuilder.Entity("Collateral.CollateralMachines.Models.MachineAppraisalDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("MachineApprID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ApprId")
                        .HasColumnType("bigint");

                    b.Property<long>("CollatId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CollatId")
                        .IsUnique();

                    b.ToTable("MachineAppraisalDetails", "collateral");
                });

            modelBuilder.Entity("Collateral.CollateralMasters.Models.CollateralMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("CollatId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CollatType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("HostCollatId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CollateralMasters", "collateral");
                });

            modelBuilder.Entity("Collateral.CollateralProperties.Models.CollateralBuilding", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("BuildingId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BuildingNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BuiltOnTitleNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long>("CollatId")
                        .HasColumnType("bigint")
                        .HasColumnName("CollatId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("HouseNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CollatId")
                        .IsUnique();

                    b.ToTable("CollateralBuildings", "collateral");
                });

            modelBuilder.Entity("Collateral.CollateralProperties.Models.CollateralCondo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("CondoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BuildingNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BuiltOnTitleNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long>("CollatId")
                        .HasColumnType("bigint")
                        .HasColumnName("CollatId");

                    b.Property<string>("CondoName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CondoRegisNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("FloorNo")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoomNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UsableArea")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("CollatId")
                        .IsUnique();

                    b.ToTable("CollateralCondos", "collateral");
                });

            modelBuilder.Entity("Collateral.CollateralProperties.Models.CollateralLand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("LandId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CollatId")
                        .HasColumnType("bigint")
                        .HasColumnName("CollatId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LandDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CollatId")
                        .IsUnique();

                    b.ToTable("CollateralLands", "collateral");
                });

            modelBuilder.Entity("Collateral.CollateralProperties.Models.LandTitle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("LandTitleId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AerialPhotoNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BoundaryMarker")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("BoundaryMarkerOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CollatId")
                        .HasColumnType("bigint")
                        .HasColumnName("CollatId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocValidate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<decimal?>("GovernmentPrice")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("PricePerSquareWa")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)");

                    b.Property<string>("Rawang")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SeqNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CollatId")
                        .IsUnique();

                    b.ToTable("LandTitles", "collateral");
                });

            modelBuilder.Entity("Collateral.CollateralVehicles.Models.CollateralVehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("VehicleId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ChassisNo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("ChassisNo");

                    b.Property<long>("CollatId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CollatId")
                        .IsUnique();

                    b.ToTable("CollateralVehicles", "collateral");
                });

            modelBuilder.Entity("Collateral.CollateralVehicles.Models.VehicleAppraisalDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("VehicleApprID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ApprId")
                        .HasColumnType("bigint");

                    b.Property<long>("CollatId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CollatId")
                        .IsUnique();

                    b.ToTable("VehicleAppraisalDetails", "collateral");
                });

            modelBuilder.Entity("Collateral.CollateralVessels.Models.CollateralVessel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("VesselId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ApprId")
                        .HasColumnType("bigint");

                    b.Property<long>("CollatId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CollatId")
                        .IsUnique();

                    b.ToTable("CollateralVessels", "collateral");
                });

            modelBuilder.Entity("Collateral.CollateralVessels.Models.VesselAppraisalDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("VesselApprID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ApprId")
                        .HasColumnType("bigint");

                    b.Property<long>("CollatId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CollatId")
                        .IsUnique();

                    b.ToTable("VesselAppraisalDetails", "collateral");
                });

            modelBuilder.Entity("Collateral.CollateralMachines.Models.CollateralMachine", b =>
                {
                    b.HasOne("Collateral.CollateralMasters.Models.CollateralMaster", null)
                        .WithOne("CollateralMachine")
                        .HasForeignKey("Collateral.CollateralMachines.Models.CollateralMachine", "CollatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Collateral.Collateral.Shared.ValueObjects.CollateralDetail", "CollateralMachineDetail", b1 =>
                        {
                            b1.Property<long>("CollateralMachineId")
                                .HasColumnType("bigint");

                            b1.Property<string>("CountryOfManufacture")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("CountryOfManufacture");

                            b1.Property<string>("EngineNo")
                                .HasMaxLength(25)
                                .HasColumnType("nvarchar(25)")
                                .HasColumnName("EngineNo");

                            b1.Property<DateTime?>("PurchaseDate")
                                .HasMaxLength(30)
                                .HasColumnType("datetime2")
                                .HasColumnName("PurchaseDate");

                            b1.Property<decimal?>("PurchasePrice")
                                .HasPrecision(19, 4)
                                .HasColumnType("decimal(19,4)")
                                .HasColumnName("PurchasePrice");

                            b1.Property<string>("RegistrationNo")
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("RegistrationNo");

                            b1.Property<int?>("YearOfManufacture")
                                .HasColumnType("int")
                                .HasColumnName("YearOfManufacture");

                            b1.HasKey("CollateralMachineId");

                            b1.ToTable("CollateralMachines", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("CollateralMachineId");
                        });

                    b.OwnsOne("Collateral.Collateral.Shared.ValueObjects.CollateralProperty", "CollateralMachineProperty", b1 =>
                        {
                            b1.Property<long>("CollateralMachineId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Brand")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Brand");

                            b1.Property<string>("EnergyUse")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("EnergyUse");

                            b1.Property<string>("Model")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Model");

                            b1.Property<string>("Name")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("MachineName");

                            b1.HasKey("CollateralMachineId");

                            b1.ToTable("CollateralMachines", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("CollateralMachineId");
                        });

                    b.OwnsOne("Collateral.Collateral.Shared.ValueObjects.CollateralSize", "CollateralMachineSize", b1 =>
                        {
                            b1.Property<long>("CollateralMachineId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Capacity")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Capacity");

                            b1.Property<decimal?>("Height")
                                .HasPrecision(7, 2)
                                .HasColumnType("decimal(7,2)")
                                .HasColumnName("Height");

                            b1.Property<decimal?>("Length")
                                .HasPrecision(7, 2)
                                .HasColumnType("decimal(7,2)")
                                .HasColumnName("Length");

                            b1.Property<decimal?>("Width")
                                .HasPrecision(7, 2)
                                .HasColumnType("decimal(7,2)")
                                .HasColumnName("Width");

                            b1.HasKey("CollateralMachineId");

                            b1.ToTable("CollateralMachines", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("CollateralMachineId");
                        });

                    b.Navigation("CollateralMachineDetail")
                        .IsRequired();

                    b.Navigation("CollateralMachineProperty")
                        .IsRequired();

                    b.Navigation("CollateralMachineSize")
                        .IsRequired();
                });

            modelBuilder.Entity("Collateral.CollateralMachines.Models.MachineAppraisalAdditionalInfo", b =>
                {
                    b.OwnsOne("Collateral.CollateralMachines.ValueObjects.MachineDetail", "MachineDetail", b1 =>
                        {
                            b1.Property<long>("MachineAppraisalAdditionalInfoId")
                                .HasColumnType("bigint");

                            b1.HasKey("MachineAppraisalAdditionalInfoId");

                            b1.ToTable("MachineAppraisalAdditionalInfos", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("MachineAppraisalAdditionalInfoId");

                            b1.OwnsOne("Collateral.CollateralMachines.ValueObjects.AtSurveyDate", "AtSurveyDate", b2 =>
                                {
                                    b2.Property<long>("MachineDetailMachineAppraisalAdditionalInfoId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("ApprScrap")
                                        .HasMaxLength(40)
                                        .HasColumnType("nvarchar(40)")
                                        .HasColumnName("ApprScrap");

                                    b2.Property<string>("Exterior")
                                        .HasMaxLength(40)
                                        .HasColumnType("nvarchar(40)")
                                        .HasColumnName("Exterior");

                                    b2.Property<int?>("Installed")
                                        .HasMaxLength(10)
                                        .HasColumnType("int")
                                        .HasColumnName("Installed");

                                    b2.Property<string>("Maintenance")
                                        .HasMaxLength(40)
                                        .HasColumnType("nvarchar(40)")
                                        .HasColumnName("Maintenance");

                                    b2.Property<bool?>("MarketDemand")
                                        .HasColumnType("bit")
                                        .HasColumnName("MarketDemand");

                                    b2.Property<string>("MarketDemandRemark")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("MarketDemandRemark");

                                    b2.Property<int?>("NoOfAppraise")
                                        .HasMaxLength(10)
                                        .HasColumnType("int")
                                        .HasColumnName("NoOfAppraise");

                                    b2.Property<int?>("NotInstalled")
                                        .HasMaxLength(10)
                                        .HasColumnType("int")
                                        .HasColumnName("NotInstalled");

                                    b2.Property<string>("Performance")
                                        .HasMaxLength(40)
                                        .HasColumnType("nvarchar(40)")
                                        .HasColumnName("Performance");

                                    b2.HasKey("MachineDetailMachineAppraisalAdditionalInfoId");

                                    b2.ToTable("MachineAppraisalAdditionalInfos", "collateral");

                                    b2.WithOwner()
                                        .HasForeignKey("MachineDetailMachineAppraisalAdditionalInfoId");
                                });

                            b1.OwnsOne("Collateral.CollateralMachines.ValueObjects.GeneralMachinery", "GeneralMachinery", b2 =>
                                {
                                    b2.Property<long>("MachineDetailMachineAppraisalAdditionalInfoId")
                                        .HasColumnType("bigint");

                                    b2.Property<int?>("ApprNo")
                                        .HasMaxLength(10)
                                        .HasColumnType("int")
                                        .HasColumnName("ApprNo");

                                    b2.Property<string>("Industrial")
                                        .HasMaxLength(40)
                                        .HasColumnType("nvarchar(40)")
                                        .HasColumnName("Industrial");

                                    b2.Property<int?>("SurveyNo")
                                        .HasMaxLength(10)
                                        .HasColumnType("int")
                                        .HasColumnName("SurveyNo");

                                    b2.HasKey("MachineDetailMachineAppraisalAdditionalInfoId");

                                    b2.ToTable("MachineAppraisalAdditionalInfos", "collateral");

                                    b2.WithOwner()
                                        .HasForeignKey("MachineDetailMachineAppraisalAdditionalInfoId");
                                });

                            b1.OwnsOne("Collateral.CollateralMachines.ValueObjects.RightsAndConditionsOfLegalRestrictions", "RightsAndConditionsOfLegalRestrictions", b2 =>
                                {
                                    b2.Property<long>("MachineDetailMachineAppraisalAdditionalInfoId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("MachineLocation")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)")
                                        .HasColumnName("MachineLocation");

                                    b2.Property<string>("Obligation")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)")
                                        .HasColumnName("Obligation");

                                    b2.Property<string>("Other")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)")
                                        .HasColumnName("Other");

                                    b2.Property<string>("Owner")
                                        .HasMaxLength(40)
                                        .HasColumnType("nvarchar(40)")
                                        .HasColumnName("Owner");

                                    b2.Property<string>("Proprietor")
                                        .HasMaxLength(40)
                                        .HasColumnType("nvarchar(40)")
                                        .HasColumnName("Proprietor");

                                    b2.HasKey("MachineDetailMachineAppraisalAdditionalInfoId");

                                    b2.ToTable("MachineAppraisalAdditionalInfos", "collateral");

                                    b2.WithOwner()
                                        .HasForeignKey("MachineDetailMachineAppraisalAdditionalInfoId");
                                });

                            b1.Navigation("AtSurveyDate")
                                .IsRequired();

                            b1.Navigation("GeneralMachinery")
                                .IsRequired();

                            b1.Navigation("RightsAndConditionsOfLegalRestrictions")
                                .IsRequired();
                        });

                    b.OwnsOne("Collateral.CollateralMachines.ValueObjects.PurposeAndLocationMachine", "PurposeAndLocationMachine", b1 =>
                        {
                            b1.Property<long>("MachineAppraisalAdditionalInfoId")
                                .HasColumnType("bigint");

                            b1.Property<string>("ApprCollatPurpose")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ApprCollatPurpose");

                            b1.Property<string>("ApprCollatType")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ApprCollatType");

                            b1.Property<string>("ApprDate")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ApprDate");

                            b1.Property<string>("Assignment")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Assignment");

                            b1.HasKey("MachineAppraisalAdditionalInfoId");

                            b1.ToTable("MachineAppraisalAdditionalInfos", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("MachineAppraisalAdditionalInfoId");
                        });

                    b.Navigation("MachineDetail")
                        .IsRequired();

                    b.Navigation("PurposeAndLocationMachine")
                        .IsRequired();
                });

            modelBuilder.Entity("Collateral.CollateralMachines.Models.MachineAppraisalDetail", b =>
                {
                    b.HasOne("Collateral.CollateralMasters.Models.CollateralMaster", null)
                        .WithOne("MachineAppraisalDetail")
                        .HasForeignKey("Collateral.CollateralMachines.Models.MachineAppraisalDetail", "CollatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Collateral.Collateral.Shared.ValueObjects.AppraisalDetail", "AppraisalDetail", b1 =>
                        {
                            b1.Property<long>("MachineAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<string>("AppraiserOpinion")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("AppraiserOpinion");

                            b1.Property<bool?>("CanUse")
                                .HasColumnType("bit")
                                .HasColumnName("CanUse");

                            b1.Property<string>("ConditionUse")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("ConditionUse");

                            b1.Property<string>("Location")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("Location");

                            b1.Property<string>("Other")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Other");

                            b1.Property<string>("Part")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("MachinePart");

                            b1.Property<string>("Remark")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Remark");

                            b1.Property<string>("UsePurpose")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("UsePurpose");

                            b1.HasKey("MachineAppraisalDetailId");

                            b1.ToTable("MachineAppraisalDetails", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("MachineAppraisalDetailId");
                        });

                    b.Navigation("AppraisalDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("Collateral.CollateralProperties.Models.CollateralBuilding", b =>
                {
                    b.HasOne("Collateral.CollateralMasters.Models.CollateralMaster", null)
                        .WithOne("CollateralBuilding")
                        .HasForeignKey("Collateral.CollateralProperties.Models.CollateralBuilding", "CollatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Collateral.CollateralProperties.Models.CollateralCondo", b =>
                {
                    b.HasOne("Collateral.CollateralMasters.Models.CollateralMaster", null)
                        .WithOne("CollateralCondo")
                        .HasForeignKey("Collateral.CollateralProperties.Models.CollateralCondo", "CollatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Collateral.CollateralProperties.ValueObjects.CollateralLocation", "CollateralLocation", b1 =>
                        {
                            b1.Property<long>("CollateralCondoId")
                                .HasColumnType("bigint");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("District");

                            b1.Property<string>("LandOffice")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("LandOffice");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Province");

                            b1.Property<string>("SubDistrict")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("SubDistrict");

                            b1.HasKey("CollateralCondoId");

                            b1.ToTable("CollateralCondos", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("CollateralCondoId");
                        });

                    b.OwnsOne("Collateral.CollateralProperties.ValueObjects.Coordinate", "Coordinate", b1 =>
                        {
                            b1.Property<long>("CollateralCondoId")
                                .HasColumnType("bigint");

                            b1.Property<decimal>("Latitude")
                                .HasPrecision(9, 6)
                                .HasColumnType("decimal(9,6)")
                                .HasColumnName("Latitude");

                            b1.Property<decimal>("Longitude")
                                .HasPrecision(9, 6)
                                .HasColumnType("decimal(9,6)")
                                .HasColumnName("Longitude");

                            b1.HasKey("CollateralCondoId");

                            b1.ToTable("CollateralCondos", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("CollateralCondoId");
                        });

                    b.Navigation("CollateralLocation")
                        .IsRequired();

                    b.Navigation("Coordinate")
                        .IsRequired();
                });

            modelBuilder.Entity("Collateral.CollateralProperties.Models.CollateralLand", b =>
                {
                    b.HasOne("Collateral.CollateralMasters.Models.CollateralMaster", null)
                        .WithOne("CollateralLand")
                        .HasForeignKey("Collateral.CollateralProperties.Models.CollateralLand", "CollatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Collateral.CollateralProperties.ValueObjects.CollateralLocation", "CollateralLocation", b1 =>
                        {
                            b1.Property<long>("CollateralLandId")
                                .HasColumnType("bigint");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("District");

                            b1.Property<string>("LandOffice")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("LandOffice");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Province");

                            b1.Property<string>("SubDistrict")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("SubDistrict");

                            b1.HasKey("CollateralLandId");

                            b1.ToTable("CollateralLands", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("CollateralLandId");
                        });

                    b.OwnsOne("Collateral.CollateralProperties.ValueObjects.Coordinate", "Coordinate", b1 =>
                        {
                            b1.Property<long>("CollateralLandId")
                                .HasColumnType("bigint");

                            b1.Property<decimal>("Latitude")
                                .HasPrecision(9, 6)
                                .HasColumnType("decimal(9,6)")
                                .HasColumnName("Latitude");

                            b1.Property<decimal>("Longitude")
                                .HasPrecision(9, 6)
                                .HasColumnType("decimal(9,6)")
                                .HasColumnName("Longitude");

                            b1.HasKey("CollateralLandId");

                            b1.ToTable("CollateralLands", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("CollateralLandId");
                        });

                    b.Navigation("CollateralLocation")
                        .IsRequired();

                    b.Navigation("Coordinate")
                        .IsRequired();
                });

            modelBuilder.Entity("Collateral.CollateralProperties.Models.LandTitle", b =>
                {
                    b.HasOne("Collateral.CollateralMasters.Models.CollateralMaster", null)
                        .WithOne("LandTitle")
                        .HasForeignKey("Collateral.CollateralProperties.Models.LandTitle", "CollatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Collateral.CollateralProperties.ValueObjects.LandTitleArea", "LandTitleArea", b1 =>
                        {
                            b1.Property<long>("LandTitleId")
                                .HasColumnType("bigint");

                            b1.Property<decimal?>("Ngan")
                                .HasPrecision(5)
                                .HasColumnType("decimal(5,0)")
                                .HasColumnName("Ngan");

                            b1.Property<decimal?>("Rai")
                                .HasPrecision(3)
                                .HasColumnType("decimal(3,0)")
                                .HasColumnName("Rai");

                            b1.Property<decimal?>("TotalAreaInSqWa")
                                .HasPrecision(15, 2)
                                .HasColumnType("decimal(15,2)")
                                .HasColumnName("TotalAreaInSqWa");

                            b1.Property<decimal?>("Wa")
                                .HasPrecision(4, 2)
                                .HasColumnType("decimal(4,2)")
                                .HasColumnName("Wa");

                            b1.HasKey("LandTitleId");

                            b1.ToTable("LandTitles", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("LandTitleId");
                        });

                    b.OwnsOne("Collateral.CollateralProperties.ValueObjects.LandTitleDocumentDetail", "LandTitleDocumentDetail", b1 =>
                        {
                            b1.Property<long>("LandTitleId")
                                .HasColumnType("bigint");

                            b1.Property<string>("BookNo")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("BookNo");

                            b1.Property<string>("LandNo")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("LandNo");

                            b1.Property<string>("PageNo")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("PageNo");

                            b1.Property<string>("SheetNo")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("SheetNo");

                            b1.Property<string>("SurveyNo")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("SurveyNo");

                            b1.Property<string>("TitleNo")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("TitleNo");

                            b1.HasKey("LandTitleId");

                            b1.ToTable("LandTitles", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("LandTitleId");
                        });

                    b.Navigation("LandTitleArea")
                        .IsRequired();

                    b.Navigation("LandTitleDocumentDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("Collateral.CollateralVehicles.Models.CollateralVehicle", b =>
                {
                    b.HasOne("Collateral.CollateralMasters.Models.CollateralMaster", null)
                        .WithOne("CollateralVehicle")
                        .HasForeignKey("Collateral.CollateralVehicles.Models.CollateralVehicle", "CollatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Collateral.Collateral.Shared.ValueObjects.CollateralDetail", "CollateralVehicleDetail", b1 =>
                        {
                            b1.Property<long>("CollateralVehicleId")
                                .HasColumnType("bigint");

                            b1.Property<string>("CountryOfManufacture")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("CountryOfManufacture");

                            b1.Property<string>("EngineNo")
                                .HasMaxLength(25)
                                .HasColumnType("nvarchar(25)")
                                .HasColumnName("EngineNo");

                            b1.Property<DateTime?>("PurchaseDate")
                                .HasMaxLength(30)
                                .HasColumnType("datetime2")
                                .HasColumnName("PurchaseDate");

                            b1.Property<decimal?>("PurchasePrice")
                                .HasPrecision(19, 4)
                                .HasColumnType("decimal(19,4)")
                                .HasColumnName("PurchasePrice");

                            b1.Property<string>("RegistrationNo")
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("RegistrationNo");

                            b1.Property<int?>("YearOfManufacture")
                                .HasColumnType("int")
                                .HasColumnName("YearOfManufacture");

                            b1.HasKey("CollateralVehicleId");

                            b1.ToTable("CollateralVehicles", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("CollateralVehicleId");
                        });

                    b.OwnsOne("Collateral.Collateral.Shared.ValueObjects.CollateralProperty", "CollateralVehicleProperty", b1 =>
                        {
                            b1.Property<long>("CollateralVehicleId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Brand")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Brand");

                            b1.Property<string>("EnergyUse")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("EnergyUse");

                            b1.Property<string>("Model")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Model");

                            b1.Property<string>("Name")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("VehicleName");

                            b1.HasKey("CollateralVehicleId");

                            b1.ToTable("CollateralVehicles", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("CollateralVehicleId");
                        });

                    b.OwnsOne("Collateral.Collateral.Shared.ValueObjects.CollateralSize", "CollateralVehicleSize", b1 =>
                        {
                            b1.Property<long>("CollateralVehicleId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Capacity")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Capacity");

                            b1.Property<decimal?>("Height")
                                .HasPrecision(7, 2)
                                .HasColumnType("decimal(7,2)")
                                .HasColumnName("Height");

                            b1.Property<decimal?>("Length")
                                .HasPrecision(7, 2)
                                .HasColumnType("decimal(7,2)")
                                .HasColumnName("Length");

                            b1.Property<decimal?>("Width")
                                .HasPrecision(7, 2)
                                .HasColumnType("decimal(7,2)")
                                .HasColumnName("Width");

                            b1.HasKey("CollateralVehicleId");

                            b1.ToTable("CollateralVehicles", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("CollateralVehicleId");
                        });

                    b.Navigation("CollateralVehicleDetail")
                        .IsRequired();

                    b.Navigation("CollateralVehicleProperty")
                        .IsRequired();

                    b.Navigation("CollateralVehicleSize")
                        .IsRequired();
                });

            modelBuilder.Entity("Collateral.CollateralVehicles.Models.VehicleAppraisalDetail", b =>
                {
                    b.HasOne("Collateral.CollateralMasters.Models.CollateralMaster", null)
                        .WithOne("VehicleAppraisalDetail")
                        .HasForeignKey("Collateral.CollateralVehicles.Models.VehicleAppraisalDetail", "CollatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Collateral.Collateral.Shared.ValueObjects.AppraisalDetail", "AppraisalDetail", b1 =>
                        {
                            b1.Property<long>("VehicleAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<string>("AppraiserOpinion")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("AppraiserOpinion");

                            b1.Property<bool?>("CanUse")
                                .HasColumnType("bit")
                                .HasColumnName("CanUse");

                            b1.Property<string>("ConditionUse")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("ConditionUse");

                            b1.Property<string>("Location")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("Location");

                            b1.Property<string>("Other")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Other");

                            b1.Property<string>("Part")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("VehiclePart");

                            b1.Property<string>("Remark")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Remark");

                            b1.Property<string>("UsePurpose")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("UsePurpose");

                            b1.HasKey("VehicleAppraisalDetailId");

                            b1.ToTable("VehicleAppraisalDetails", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("VehicleAppraisalDetailId");
                        });

                    b.Navigation("AppraisalDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("Collateral.CollateralVessels.Models.CollateralVessel", b =>
                {
                    b.HasOne("Collateral.CollateralMasters.Models.CollateralMaster", null)
                        .WithOne("CollateralVessel")
                        .HasForeignKey("Collateral.CollateralVessels.Models.CollateralVessel", "CollatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Collateral.Collateral.Shared.ValueObjects.CollateralDetail", "CollateralVesselDetail", b1 =>
                        {
                            b1.Property<long>("CollateralVesselId")
                                .HasColumnType("bigint");

                            b1.Property<string>("CountryOfManufacture")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("CountryOfManufacture");

                            b1.Property<string>("EngineNo")
                                .HasMaxLength(25)
                                .HasColumnType("nvarchar(25)")
                                .HasColumnName("EngineNo");

                            b1.Property<DateTime?>("PurchaseDate")
                                .HasMaxLength(30)
                                .HasColumnType("datetime2")
                                .HasColumnName("PurchaseDate");

                            b1.Property<decimal?>("PurchasePrice")
                                .HasPrecision(19, 4)
                                .HasColumnType("decimal(19,4)")
                                .HasColumnName("PurchasePrice");

                            b1.Property<string>("RegistrationNo")
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("RegistrationNo");

                            b1.Property<int?>("YearOfManufacture")
                                .HasColumnType("int")
                                .HasColumnName("YearOfManufacture");

                            b1.HasKey("CollateralVesselId");

                            b1.ToTable("CollateralVessels", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("CollateralVesselId");
                        });

                    b.OwnsOne("Collateral.Collateral.Shared.ValueObjects.CollateralProperty", "CollateralVesselProperty", b1 =>
                        {
                            b1.Property<long>("CollateralVesselId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Brand")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Brand");

                            b1.Property<string>("EnergyUse")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("EnergyUse");

                            b1.Property<string>("Model")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Model");

                            b1.Property<string>("Name")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("VesselName");

                            b1.HasKey("CollateralVesselId");

                            b1.ToTable("CollateralVessels", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("CollateralVesselId");
                        });

                    b.OwnsOne("Collateral.Collateral.Shared.ValueObjects.CollateralSize", "CollateralVesselSize", b1 =>
                        {
                            b1.Property<long>("CollateralVesselId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Capacity")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Capacity");

                            b1.Property<decimal?>("Height")
                                .HasPrecision(7, 2)
                                .HasColumnType("decimal(7,2)")
                                .HasColumnName("Height");

                            b1.Property<decimal?>("Length")
                                .HasPrecision(7, 2)
                                .HasColumnType("decimal(7,2)")
                                .HasColumnName("Length");

                            b1.Property<decimal?>("Width")
                                .HasPrecision(7, 2)
                                .HasColumnType("decimal(7,2)")
                                .HasColumnName("Width");

                            b1.HasKey("CollateralVesselId");

                            b1.ToTable("CollateralVessels", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("CollateralVesselId");
                        });

                    b.Navigation("CollateralVesselDetail")
                        .IsRequired();

                    b.Navigation("CollateralVesselProperty")
                        .IsRequired();

                    b.Navigation("CollateralVesselSize")
                        .IsRequired();
                });

            modelBuilder.Entity("Collateral.CollateralVessels.Models.VesselAppraisalDetail", b =>
                {
                    b.HasOne("Collateral.CollateralMasters.Models.CollateralMaster", null)
                        .WithOne("VesselAppraisalDetail")
                        .HasForeignKey("Collateral.CollateralVessels.Models.VesselAppraisalDetail", "CollatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Collateral.Collateral.Shared.ValueObjects.AppraisalDetail", "AppraisalDetail", b1 =>
                        {
                            b1.Property<long>("VesselAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<string>("AppraiserOpinion")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("AppraiserOpinion");

                            b1.Property<bool?>("CanUse")
                                .HasColumnType("bit")
                                .HasColumnName("CanUse");

                            b1.Property<string>("ConditionUse")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("ConditionUse");

                            b1.Property<string>("Location")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("Location");

                            b1.Property<string>("Other")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Other");

                            b1.Property<string>("Part")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("VesselPart");

                            b1.Property<string>("Remark")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Remark");

                            b1.Property<string>("UsePurpose")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("UsePurpose");

                            b1.HasKey("VesselAppraisalDetailId");

                            b1.ToTable("VesselAppraisalDetails", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("VesselAppraisalDetailId");
                        });

                    b.Navigation("AppraisalDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("Collateral.CollateralMasters.Models.CollateralMaster", b =>
                {
                    b.Navigation("CollateralBuilding")
                        .IsRequired();

                    b.Navigation("CollateralCondo")
                        .IsRequired();

                    b.Navigation("CollateralLand")
                        .IsRequired();

                    b.Navigation("CollateralMachine")
                        .IsRequired();

                    b.Navigation("CollateralVehicle")
                        .IsRequired();

                    b.Navigation("CollateralVessel")
                        .IsRequired();

                    b.Navigation("LandTitle")
                        .IsRequired();

                    b.Navigation("MachineAppraisalDetail")
                        .IsRequired();

                    b.Navigation("VehicleAppraisalDetail")
                        .IsRequired();

                    b.Navigation("VesselAppraisalDetail")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
