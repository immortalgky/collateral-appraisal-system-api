// <auto-generated />
using System;
using Collateral.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Collateral.Data.Migrations
{
    [DbContext(typeof(CollateralDbContext))]
    [Migration("20250815044044_AddCollateralMachine_Debug1")]
    partial class AddCollateralMachine_Debug1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("collateral")
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Collateral.CollateralMachines.Models.CollateralMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("MachineID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ChassisNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CollatId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CollatId")
                        .IsUnique();

                    b.ToTable("CollateralMachines", "collateral");
                });

            modelBuilder.Entity("Collateral.CollateralMasters.Models.CollateralMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CollatType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("HostCollatID")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CollateralMasters", "collateral");
                });

            modelBuilder.Entity("Collateral.CollateralMachines.Models.CollateralMachine", b =>
                {
                    b.HasOne("Collateral.CollateralMasters.Models.CollateralMaster", null)
                        .WithOne("CollateralMachine")
                        .HasForeignKey("Collateral.CollateralMachines.Models.CollateralMachine", "CollatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Collateral.Collateral.Shared.ValueObjects.CollateralDetail", "CollateralMachineDetail", b1 =>
                        {
                            b1.Property<long>("CollateralMachineId")
                                .HasColumnType("bigint");

                            b1.Property<string>("CountryOfManufacture")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("CountryOfManufacture");

                            b1.Property<string>("EngineNo")
                                .HasMaxLength(25)
                                .HasColumnType("nvarchar(25)")
                                .HasColumnName("EngineNo");

                            b1.Property<DateTime?>("PurchaseDate")
                                .HasMaxLength(30)
                                .HasColumnType("datetime2")
                                .HasColumnName("PurchaseDate");

                            b1.Property<decimal?>("PurchasePrice")
                                .HasPrecision(19, 4)
                                .HasColumnType("decimal(19,4)")
                                .HasColumnName("PurchasePrice");

                            b1.Property<string>("RegistrationNo")
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("RegistrationNo");

                            b1.Property<int?>("YearOfManufacture")
                                .HasColumnType("int")
                                .HasColumnName("YearOfManufacture");

                            b1.HasKey("CollateralMachineId");

                            b1.ToTable("CollateralMachines", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("CollateralMachineId");
                        });

                    b.OwnsOne("Collateral.Collateral.Shared.ValueObjects.CollateralProperty", "CollateralMachineProperty", b1 =>
                        {
                            b1.Property<long>("CollateralMachineId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Brand")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Brand");

                            b1.Property<string>("EnergyUse")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("EnergyUse");

                            b1.Property<string>("Model")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Model");

                            b1.Property<string>("Name")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("MachineName");

                            b1.HasKey("CollateralMachineId");

                            b1.ToTable("CollateralMachines", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("CollateralMachineId");
                        });

                    b.OwnsOne("Collateral.Collateral.Shared.ValueObjects.CollateralSize", "CollateralMachineSize", b1 =>
                        {
                            b1.Property<long>("CollateralMachineId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Capacity")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Capacity");

                            b1.Property<decimal?>("Height")
                                .HasPrecision(7, 2)
                                .HasColumnType("decimal(7,2)")
                                .HasColumnName("Height");

                            b1.Property<decimal?>("Length")
                                .HasPrecision(7, 2)
                                .HasColumnType("decimal(7,2)")
                                .HasColumnName("Length");

                            b1.Property<decimal?>("Width")
                                .HasPrecision(7, 2)
                                .HasColumnType("decimal(7,2)")
                                .HasColumnName("Width");

                            b1.HasKey("CollateralMachineId");

                            b1.ToTable("CollateralMachines", "collateral");

                            b1.WithOwner()
                                .HasForeignKey("CollateralMachineId");
                        });

                    b.Navigation("CollateralMachineDetail")
                        .IsRequired();

                    b.Navigation("CollateralMachineProperty")
                        .IsRequired();

                    b.Navigation("CollateralMachineSize")
                        .IsRequired();
                });

            modelBuilder.Entity("Collateral.CollateralMasters.Models.CollateralMaster", b =>
                {
                    b.Navigation("CollateralMachine")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
