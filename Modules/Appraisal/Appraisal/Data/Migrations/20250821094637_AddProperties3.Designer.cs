// <auto-generated />
using System;
using Appraisal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Appraisal.Data.Migrations
{
    [DbContext(typeof(AppraisalDbContext))]
    [Migration("20250821094637_AddProperties3")]
    partial class AddProperties3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Appraisal")
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Appraisal.AppraisalProperties.Models.BuildingAppraisalDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("BuildingApprId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ApprId")
                        .HasColumnType("bigint");

                    b.Property<string>("BuildingMaterial")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("BuildingStyle")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprId")
                        .IsUnique();

                    b.ToTable("BuildingAppraisalDetails", "Appraisal");
                });

            modelBuilder.Entity("Appraisal.AppraisalProperties.Models.CondoAppraisalDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("CondoApprId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ApprId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocValidate")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("DocValidate");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remark");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprId")
                        .IsUnique();

                    b.ToTable("CondoAppraisalDetails", "Appraisal");
                });

            modelBuilder.Entity("Appraisal.AppraisalProperties.Models.LandAppraisalDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("LandApprId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Allocation")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("AnticipationOfProp")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("ApprId")
                        .HasColumnType("bigint");

                    b.Property<string>("CheckOwner")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Eviction")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Owner")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PropertyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprId")
                        .IsUnique();

                    b.ToTable("LandAppraisalDetails", "Appraisal");
                });

            modelBuilder.Entity("Appraisal.RequestAppraisals.Models.RequestAppraisal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CollateralId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("RequestId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Appraisals", "Appraisal");
                });

            modelBuilder.Entity("Appraisal.AppraisalProperties.Models.BuildingAppraisalDetail", b =>
                {
                    b.HasOne("Appraisal.RequestAppraisals.Models.RequestAppraisal", null)
                        .WithOne("BuildingAppraisalDetail")
                        .HasForeignKey("Appraisal.AppraisalProperties.Models.BuildingAppraisalDetail", "ApprId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("Appraisal.AppraisalProperties.ValueObjects.BuildingAppraisalDepreciationDetail", "BuildingAppraisalDepreciationDetails", b1 =>
                        {
                            b1.Property<long>("BuildingDepreciationId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("BuildingDepreciationId"));

                            b1.Property<bool?>("AppraisalMethod")
                                .HasColumnType("bit")
                                .HasColumnName("AppraisalMethod");

                            b1.Property<decimal>("Area")
                                .HasPrecision(5, 3)
                                .HasColumnType("decimal(5,3)")
                                .HasColumnName("Area");

                            b1.Property<string>("AreaDesc")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("AreaDesc");

                            b1.Property<long>("BuildingApprId")
                                .HasColumnType("bigint");

                            b1.Property<decimal>("DegradationYearPct")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("DegradationYearPct");

                            b1.Property<decimal>("PriceBeforeDegradation")
                                .HasPrecision(19, 4)
                                .HasColumnType("decimal(19,4)")
                                .HasColumnName("PriceBeforeDegradation");

                            b1.Property<decimal>("PriceDegradation")
                                .HasPrecision(19, 4)
                                .HasColumnType("decimal(19,4)")
                                .HasColumnName("PriceDegradation");

                            b1.Property<decimal>("PricePerSqM")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("PricePerSqM");

                            b1.Property<decimal>("TotalDegradationPct")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("TotalDegradationPct");

                            b1.Property<decimal>("TotalPrice")
                                .HasPrecision(19, 4)
                                .HasColumnType("decimal(19,4)")
                                .HasColumnName("TotalPrice");

                            b1.Property<short>("Year")
                                .HasColumnType("smallint")
                                .HasColumnName("Year");

                            b1.HasKey("BuildingDepreciationId");

                            b1.HasIndex("BuildingApprId");

                            b1.ToTable("BuildingAppraisalDepreciationDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("BuildingApprId");

                            b1.OwnsMany("Appraisal.AppraisalProperties.ValueObjects.BuildingAppraisalDepreciationPeriod", "BuildingAppraisalDepreciationPeriods", b2 =>
                                {
                                    b2.Property<long>("BuildingDpcPeriodId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("bigint");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<long>("BuildingDpcPeriodId"));

                                    b2.Property<int>("AtYear")
                                        .HasColumnType("int")
                                        .HasColumnName("AtYear");

                                    b2.Property<long>("BuildingDepreciationId")
                                        .HasColumnType("bigint");

                                    b2.Property<decimal>("DepreciationPerYear")
                                        .HasPrecision(19, 4)
                                        .HasColumnType("decimal(19,4)")
                                        .HasColumnName("DepreciationPerYear");

                                    b2.HasKey("BuildingDpcPeriodId");

                                    b2.HasIndex("BuildingDepreciationId");

                                    b2.ToTable("BuildingAppraisalDepreciationPeriods", "Appraisal");

                                    b2.WithOwner()
                                        .HasForeignKey("BuildingDepreciationId");
                                });

                            b1.Navigation("BuildingAppraisalDepreciationPeriods");
                        });

                    b.OwnsMany("Appraisal.AppraisalProperties.ValueObjects.BuildingAppraisalSurface", "BuildingAppraisalSurfaces", b1 =>
                        {
                            b1.Property<long>("SurfaceId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("SurfaceId"));

                            b1.Property<long>("BuildingApprId")
                                .HasColumnType("bigint");

                            b1.Property<string>("FloorStructure")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("FloorStructure");

                            b1.Property<string>("FloorStructureOther")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("FloorStructureOther");

                            b1.Property<string>("FloorSurface")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("FloorSurface");

                            b1.Property<string>("FloorSurfaceOther")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("FloorSurfaceOther");

                            b1.Property<string>("FloorType")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("FloorType");

                            b1.Property<short?>("FromFloorNo")
                                .HasColumnType("smallint")
                                .HasColumnName("FromFloorNo");

                            b1.Property<short?>("ToFloorNo")
                                .HasColumnType("smallint")
                                .HasColumnName("ToFloorNo");

                            b1.HasKey("SurfaceId");

                            b1.HasIndex("BuildingApprId");

                            b1.ToTable("BuildingAppraisalSurfaces", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("BuildingApprId");
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.Encroachment", "Encroachment", b1 =>
                        {
                            b1.Property<long>("BuildingAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<decimal?>("EncroachArea")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("EncroachArea");

                            b1.Property<bool?>("IsEncroached")
                                .HasColumnType("bit")
                                .HasColumnName("IsEncroached");

                            b1.Property<string>("IsEncroachedRemark")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("IsEncroachedRemark");

                            b1.HasKey("BuildingAppraisalDetailId");

                            b1.ToTable("BuildingAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("BuildingAppraisalDetailId");
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.BuildingConstructionInformation", "BuildingConstructionInformation", b1 =>
                        {
                            b1.Property<long>("BuildingAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<decimal?>("OriginalBuildingPct")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("OriginalBuildingPct");

                            b1.Property<decimal?>("UnderConstPct")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("UnderConstPct");

                            b1.HasKey("BuildingAppraisalDetailId");

                            b1.ToTable("BuildingAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("BuildingAppraisalDetailId");
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.BuildingInformation", "BuildingInformation", b1 =>
                        {
                            b1.Property<long>("BuildingAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<string>("BuildingCondition")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("BuildingCondition");

                            b1.Property<string>("BuildingStatus")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("BuildingStatus");

                            b1.Property<string>("IsAppraise")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("IsAppraise");

                            b1.Property<decimal?>("LandArea")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("LandArea");

                            b1.Property<DateTime?>("LicenseExpirationDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("LicenseExpirationDate");

                            b1.Property<string>("NoHouseNumber")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("NoHouseNumber");

                            b1.HasKey("BuildingAppraisalDetailId");

                            b1.ToTable("BuildingAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("BuildingAppraisalDetailId");

                            b1.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.ObligationDetail", "ObligationDetail", b2 =>
                                {
                                    b2.Property<long>("BuildingInformationBuildingAppraisalDetailId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("IsObligation")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("IsObligation");

                                    b2.Property<string>("Obligation")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("Obligation");

                                    b2.HasKey("BuildingInformationBuildingAppraisalDetailId");

                                    b2.ToTable("BuildingAppraisalDetails", "Appraisal");

                                    b2.WithOwner()
                                        .HasForeignKey("BuildingInformationBuildingAppraisalDetailId");
                                });

                            b1.Navigation("ObligationDetail")
                                .IsRequired();
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.BuildingStructureDetail", "BuildingStructureDetail", b1 =>
                        {
                            b1.Property<long>("BuildingAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.HasKey("BuildingAppraisalDetailId");

                            b1.ToTable("BuildingAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("BuildingAppraisalDetailId");

                            b1.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.BuildingCeiling", "BuildingCeiling", b2 =>
                                {
                                    b2.Property<long>("BuildingStructureDetailBuildingAppraisalDetailId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("Ceiling")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)")
                                        .HasColumnName("Ceiling");

                                    b2.Property<string>("CeilingOther")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("CeilingOther");

                                    b2.HasKey("BuildingStructureDetailBuildingAppraisalDetailId");

                                    b2.ToTable("BuildingAppraisalDetails", "Appraisal");

                                    b2.WithOwner()
                                        .HasForeignKey("BuildingStructureDetailBuildingAppraisalDetailId");
                                });

                            b1.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.BuildingConstructionStyle", "BuildingConstructionStyle", b2 =>
                                {
                                    b2.Property<long>("BuildingStructureDetailBuildingAppraisalDetailId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("ConstStyle")
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("ConstStyle");

                                    b2.Property<string>("ConstStyleRemark")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("ConstStyleRemark");

                                    b2.HasKey("BuildingStructureDetailBuildingAppraisalDetailId");

                                    b2.ToTable("BuildingAppraisalDetails", "Appraisal");

                                    b2.WithOwner()
                                        .HasForeignKey("BuildingStructureDetailBuildingAppraisalDetailId");
                                });

                            b1.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.BuildingConstructionType", "ConstType", b2 =>
                                {
                                    b2.Property<long>("BuildingStructureDetailBuildingAppraisalDetailId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("ConstType")
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("ConstType");

                                    b2.Property<string>("ConstTypeOther")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("ConstTypeOther");

                                    b2.HasKey("BuildingStructureDetailBuildingAppraisalDetailId");

                                    b2.ToTable("BuildingAppraisalDetails", "Appraisal");

                                    b2.WithOwner()
                                        .HasForeignKey("BuildingStructureDetailBuildingAppraisalDetailId");
                                });

                            b1.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.BuildingFence", "BuildingFence", b2 =>
                                {
                                    b2.Property<long>("BuildingStructureDetailBuildingAppraisalDetailId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("Fence")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)")
                                        .HasColumnName("Fence");

                                    b2.Property<string>("FenceOther")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("FenceOther");

                                    b2.HasKey("BuildingStructureDetailBuildingAppraisalDetailId");

                                    b2.ToTable("BuildingAppraisalDetails", "Appraisal");

                                    b2.WithOwner()
                                        .HasForeignKey("BuildingStructureDetailBuildingAppraisalDetailId");
                                });

                            b1.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.BuildingGeneralStructure", "BuildingGeneralStructure", b2 =>
                                {
                                    b2.Property<long>("BuildingStructureDetailBuildingAppraisalDetailId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("GeneralStructure")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)")
                                        .HasColumnName("GeneralStructure");

                                    b2.Property<string>("GeneralStructureOther")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("GeneralStructureOther");

                                    b2.HasKey("BuildingStructureDetailBuildingAppraisalDetailId");

                                    b2.ToTable("BuildingAppraisalDetails", "Appraisal");

                                    b2.WithOwner()
                                        .HasForeignKey("BuildingStructureDetailBuildingAppraisalDetailId");
                                });

                            b1.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.BuildingRoof", "BuildingRoof", b2 =>
                                {
                                    b2.Property<long>("BuildingStructureDetailBuildingAppraisalDetailId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("Roof")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)")
                                        .HasColumnName("Roof");

                                    b2.Property<string>("RoofOther")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("RoofOther");

                                    b2.HasKey("BuildingStructureDetailBuildingAppraisalDetailId");

                                    b2.ToTable("BuildingAppraisalDetails", "Appraisal");

                                    b2.WithOwner()
                                        .HasForeignKey("BuildingStructureDetailBuildingAppraisalDetailId");
                                });

                            b1.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.BuildingRoofFrame", "BuildingRoofFrame", b2 =>
                                {
                                    b2.Property<long>("BuildingStructureDetailBuildingAppraisalDetailId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("RoofFrame")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)")
                                        .HasColumnName("RoofFrame");

                                    b2.Property<string>("RoofFrameOther")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("RoofFrameOther");

                                    b2.HasKey("BuildingStructureDetailBuildingAppraisalDetailId");

                                    b2.ToTable("BuildingAppraisalDetails", "Appraisal");

                                    b2.WithOwner()
                                        .HasForeignKey("BuildingStructureDetailBuildingAppraisalDetailId");
                                });

                            b1.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.BuildingWall", "BuildingWall", b2 =>
                                {
                                    b2.Property<long>("BuildingStructureDetailBuildingAppraisalDetailId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("ExteriorWall")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)")
                                        .HasColumnName("ExteriorWall");

                                    b2.Property<string>("ExteriorWallOther")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("ExteriorWallOther");

                                    b2.Property<string>("InteriorWall")
                                        .HasMaxLength(100)
                                        .HasColumnType("nvarchar(100)")
                                        .HasColumnName("InteriorWall");

                                    b2.Property<string>("InteriorWallOther")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("InteriorWallOther");

                                    b2.HasKey("BuildingStructureDetailBuildingAppraisalDetailId");

                                    b2.ToTable("BuildingAppraisalDetails", "Appraisal");

                                    b2.WithOwner()
                                        .HasForeignKey("BuildingStructureDetailBuildingAppraisalDetailId");
                                });

                            b1.Navigation("BuildingCeiling")
                                .IsRequired();

                            b1.Navigation("BuildingConstructionStyle")
                                .IsRequired();

                            b1.Navigation("BuildingFence")
                                .IsRequired();

                            b1.Navigation("BuildingGeneralStructure")
                                .IsRequired();

                            b1.Navigation("BuildingRoof")
                                .IsRequired();

                            b1.Navigation("BuildingRoofFrame")
                                .IsRequired();

                            b1.Navigation("BuildingWall")
                                .IsRequired();

                            b1.Navigation("ConstType")
                                .IsRequired();
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.BuildingTypeDetail", "BuildingTypeDetail", b1 =>
                        {
                            b1.Property<long>("BuildingAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<string>("BuildingType")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("BuildingType");

                            b1.Property<string>("BuildingTypeOther")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("BuildingTypeOther");

                            b1.HasKey("BuildingAppraisalDetailId");

                            b1.ToTable("BuildingAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("BuildingAppraisalDetailId");
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.DecorationDetail", "DecorationDetail", b1 =>
                        {
                            b1.Property<long>("BuildingAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Decoration")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("Decoration");

                            b1.Property<string>("DecorationOther")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("DecorationOther");

                            b1.HasKey("BuildingAppraisalDetailId");

                            b1.ToTable("BuildingAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("BuildingAppraisalDetailId");
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.ResidentialStatus", "ResidentialStatus", b1 =>
                        {
                            b1.Property<long>("BuildingAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<short?>("BuildingYear")
                                .HasColumnType("smallint")
                                .HasColumnName("BuildingYear");

                            b1.Property<string>("DueTo")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("DueTo");

                            b1.Property<string>("IsResidential")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("IsResidential");

                            b1.HasKey("BuildingAppraisalDetailId");

                            b1.ToTable("BuildingAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("BuildingAppraisalDetailId");
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.UtilizationDetail", "UtilizationDetail", b1 =>
                        {
                            b1.Property<long>("BuildingAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<string>("UseForOtherPurpose")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("UseForOtherPurpose");

                            b1.Property<string>("Utilization")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("Utilization");

                            b1.HasKey("BuildingAppraisalDetailId");

                            b1.ToTable("BuildingAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("BuildingAppraisalDetailId");
                        });

                    b.Navigation("BuildingAppraisalDepreciationDetails");

                    b.Navigation("BuildingAppraisalSurfaces");

                    b.Navigation("BuildingConstructionInformation")
                        .IsRequired();

                    b.Navigation("BuildingInformation")
                        .IsRequired();

                    b.Navigation("BuildingStructureDetail")
                        .IsRequired();

                    b.Navigation("BuildingTypeDetail")
                        .IsRequired();

                    b.Navigation("DecorationDetail")
                        .IsRequired();

                    b.Navigation("Encroachment")
                        .IsRequired();

                    b.Navigation("ResidentialStatus")
                        .IsRequired();

                    b.Navigation("UtilizationDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("Appraisal.AppraisalProperties.Models.CondoAppraisalDetail", b =>
                {
                    b.HasOne("Appraisal.RequestAppraisals.Models.RequestAppraisal", null)
                        .WithOne("CondoAppraisalDetail")
                        .HasForeignKey("Appraisal.AppraisalProperties.Models.CondoAppraisalDetail", "ApprId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("Appraisal.AppraisalProperties.ValueObjects.CondoAppraisalAreaDetail", "CondoAppraisalAreaDetails", b1 =>
                        {
                            b1.Property<long>("CondoAreaDetId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("CondoAreaDetId"));

                            b1.Property<string>("AreaDesc")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("AreaDesc");

                            b1.Property<decimal?>("AreaSize")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("AreaSize");

                            b1.Property<long>("CondoApprId")
                                .HasColumnType("bigint");

                            b1.HasKey("CondoAreaDetId");

                            b1.HasIndex("CondoApprId");

                            b1.ToTable("CondoAppraisalAreaDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("CondoApprId");
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.Expropriation", "Expropriation", b1 =>
                        {
                            b1.Property<long>("CondoAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<bool?>("InLineExpropriate")
                                .HasColumnType("bit")
                                .HasColumnName("InLineExpropriate");

                            b1.Property<string>("InLineExpropriateRemark")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("InLineExpropriateRemark");

                            b1.Property<bool?>("IsExpropriate")
                                .HasColumnType("bit")
                                .HasColumnName("IsExpropriate");

                            b1.Property<string>("IsExpropriateRemark")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("IsExpropriateRemark");

                            b1.Property<string>("RoyalDecree")
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("RoyalDecree");

                            b1.HasKey("CondoAppraisalDetailId");

                            b1.ToTable("CondoAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("CondoAppraisalDetailId");
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.ForestBoundary", "ForestBoundary", b1 =>
                        {
                            b1.Property<long>("CondoAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<bool?>("IsForestBoundary")
                                .HasColumnType("bit")
                                .HasColumnName("IsForestBoundary");

                            b1.Property<string>("IsForestBoundaryRemark")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("IsForestBoundaryRemark");

                            b1.HasKey("CondoAppraisalDetailId");

                            b1.ToTable("CondoAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("CondoAppraisalDetailId");
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.ObligationDetail", "ObligationDetail", b1 =>
                        {
                            b1.Property<long>("CondoAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<string>("IsObligation")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("IsObligation");

                            b1.Property<string>("Obligation")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Obligation");

                            b1.HasKey("CondoAppraisalDetailId");

                            b1.ToTable("CondoAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("CondoAppraisalDetailId");
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.CondoAttribute", "CondoAttribute", b1 =>
                        {
                            b1.Property<long>("CondoAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<string>("BuildingForm")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("BuildingForm");

                            b1.Property<short?>("BuildingYear")
                                .HasColumnType("smallint")
                                .HasColumnName("BuildingYear");

                            b1.Property<short>("CondoHeight")
                                .HasColumnType("smallint")
                                .HasColumnName("CondoHeight");

                            b1.Property<string>("ConstMaterial")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("ConstMaterial");

                            b1.Property<string>("Decoration")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("Decoration");

                            b1.Property<decimal?>("TotalAreaInSqM")
                                .HasPrecision(19, 4)
                                .HasColumnType("decimal(19,4)")
                                .HasColumnName("TotalAreaInSqM");

                            b1.HasKey("CondoAppraisalDetailId");

                            b1.ToTable("CondoAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("CondoAppraisalDetailId");

                            b1.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.CondoFloor", "CondoFloor", b2 =>
                                {
                                    b2.Property<long>("CondoAttributeCondoAppraisalDetailId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("BathroomFloorMaterial")
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("BathroomFloorMaterial");

                                    b2.Property<string>("BathroomFloorMaterialOther")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("BathroomFloorMaterialOther");

                                    b2.Property<string>("GroundFloorMaterial")
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("GroundFloorMaterial");

                                    b2.Property<string>("GroundFloorMaterialOther")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("GroundFloorMaterialOther");

                                    b2.Property<string>("UpperFloorMaterial")
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("UpperFloorMaterial");

                                    b2.Property<string>("UpperFloorMaterialOther")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("UpperFloorMaterialOther");

                                    b2.HasKey("CondoAttributeCondoAppraisalDetailId");

                                    b2.ToTable("CondoAppraisalDetails", "Appraisal");

                                    b2.WithOwner()
                                        .HasForeignKey("CondoAttributeCondoAppraisalDetailId");
                                });

                            b1.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.CondoRoof", "CondoRoof", b2 =>
                                {
                                    b2.Property<long>("CondoAttributeCondoAppraisalDetailId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("Roof")
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("Roof");

                                    b2.Property<string>("RoofOther")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("RoofOther");

                                    b2.HasKey("CondoAttributeCondoAppraisalDetailId");

                                    b2.ToTable("CondoAppraisalDetails", "Appraisal");

                                    b2.WithOwner()
                                        .HasForeignKey("CondoAttributeCondoAppraisalDetailId");
                                });

                            b1.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.CondoRoomLayout", "CondoRoomLayout", b2 =>
                                {
                                    b2.Property<long>("CondoAttributeCondoAppraisalDetailId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("RoomLayout")
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("RoomLayout");

                                    b2.Property<string>("RoomLayoutOther")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("RoomLayoutOther");

                                    b2.HasKey("CondoAttributeCondoAppraisalDetailId");

                                    b2.ToTable("CondoAppraisalDetails", "Appraisal");

                                    b2.WithOwner()
                                        .HasForeignKey("CondoAttributeCondoAppraisalDetailId");
                                });

                            b1.Navigation("CondoFloor")
                                .IsRequired();

                            b1.Navigation("CondoRoof")
                                .IsRequired();

                            b1.Navigation("CondoRoomLayout")
                                .IsRequired();
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.CondoPrice", "CondoPrice", b1 =>
                        {
                            b1.Property<long>("CondoAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<decimal?>("BuildingInsurancePrice")
                                .HasPrecision(19, 4)
                                .HasColumnType("decimal(19,4)")
                                .HasColumnName("BuildingInsurancePrice");

                            b1.Property<decimal?>("ForceSellingPrice")
                                .HasPrecision(19, 4)
                                .HasColumnType("decimal(19,4)")
                                .HasColumnName("ForceSellingPrice");

                            b1.Property<decimal?>("SellingPrice")
                                .HasPrecision(19, 4)
                                .HasColumnType("decimal(19,4)")
                                .HasColumnName("SellingPrice");

                            b1.HasKey("CondoAppraisalDetailId");

                            b1.ToTable("CondoAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("CondoAppraisalDetailId");
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.CondominiumFacility", "CondominiumFacility", b1 =>
                        {
                            b1.Property<long>("CondoAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<string>("CondoFacility")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("CondoFacility");

                            b1.Property<string>("CondoFacilityOther")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CondoFacilityOther");

                            b1.HasKey("CondoAppraisalDetailId");

                            b1.ToTable("CondoAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("CondoAppraisalDetailId");
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.CondominiumLocation", "CondominiumLocation", b1 =>
                        {
                            b1.Property<long>("CondoAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<bool?>("CondoLocation")
                                .HasColumnType("bit")
                                .HasColumnName("CondoLocation");

                            b1.Property<decimal?>("Distance")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("Distance");

                            b1.Property<string>("PublicUtility")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("PublicUtility");

                            b1.Property<string>("PublicUtilityOther")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PublicUtilityOther");

                            b1.Property<decimal?>("RightOfWay")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("RightOfWay");

                            b1.Property<string>("RoadSurface")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("RoadSurface");

                            b1.Property<decimal?>("RoadWidth")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("RoadWidth");

                            b1.Property<string>("Soi")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Soi");

                            b1.Property<string>("Street")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Street");

                            b1.HasKey("CondoAppraisalDetailId");

                            b1.ToTable("CondoAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("CondoAppraisalDetailId");
                        });

                    b.Navigation("CondoAppraisalAreaDetails");

                    b.Navigation("CondoAttribute")
                        .IsRequired();

                    b.Navigation("CondoPrice")
                        .IsRequired();

                    b.Navigation("CondominiumFacility")
                        .IsRequired();

                    b.Navigation("CondominiumLocation")
                        .IsRequired();

                    b.Navigation("Expropriation")
                        .IsRequired();

                    b.Navigation("ForestBoundary")
                        .IsRequired();

                    b.Navigation("ObligationDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("Appraisal.AppraisalProperties.Models.LandAppraisalDetail", b =>
                {
                    b.HasOne("Appraisal.RequestAppraisals.Models.RequestAppraisal", null)
                        .WithOne("LandAppraisalDetail")
                        .HasForeignKey("Appraisal.AppraisalProperties.Models.LandAppraisalDetail", "ApprId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.ObligationDetail", "ObligationDetail", b1 =>
                        {
                            b1.Property<long>("LandAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<string>("IsObligation")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("IsObligation");

                            b1.Property<string>("Obligation")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Obligation");

                            b1.HasKey("LandAppraisalDetailId");

                            b1.ToTable("LandAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("LandAppraisalDetailId");
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.ConsecutiveArea", "ConsecutiveArea", b1 =>
                        {
                            b1.Property<long>("LandAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<string>("EConsecutiveArea")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("E_ConsecutiveArea");

                            b1.Property<decimal?>("EEstimateLength")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("E_EstimateLength");

                            b1.Property<string>("NConsecutiveArea")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("N_ConsecutiveArea");

                            b1.Property<decimal?>("NEstimateLength")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("N_EstimateLength");

                            b1.Property<string>("SConsecutiveArea")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("S_ConsecutiveArea");

                            b1.Property<decimal?>("SEstimateLength")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("S_EstimateLength");

                            b1.Property<string>("WConsecutiveArea")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("W_ConsecutiveArea");

                            b1.Property<decimal?>("WEstimateLength")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("W_EstimateLength");

                            b1.HasKey("LandAppraisalDetailId");

                            b1.ToTable("LandAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("LandAppraisalDetailId");
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.LandAccessibilityDetail", "LandAccessibilityDetail", b1 =>
                        {
                            b1.Property<long>("LandAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<string>("LandEntranceExit")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("LandEntranceExit");

                            b1.Property<string>("LandEntranceExitOther")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LandEntranceExitOther");

                            b1.Property<string>("LandUse")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("LandUse");

                            b1.Property<string>("LandUseOther")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LandUseOther");

                            b1.Property<string>("PublicUtility")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("PublicUtility");

                            b1.Property<string>("PublicUtilityOther")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PublicUtilityOther");

                            b1.Property<string>("RoadSurface")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("RoadSurface");

                            b1.Property<string>("RoadSurfaceOther")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("RoadSurfaceOther");

                            b1.Property<string>("Transportation")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Transportation");

                            b1.Property<string>("TransportationOther")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("TransportationOther");

                            b1.HasKey("LandAppraisalDetailId");

                            b1.ToTable("LandAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("LandAppraisalDetailId");

                            b1.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.FrontageRoad", "FrontageRoad", b2 =>
                                {
                                    b2.Property<long>("LandAccessibilityDetailLandAppraisalDetailId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("LandAccessibility")
                                        .HasMaxLength(10)
                                        .HasColumnType("varchar(10)")
                                        .HasColumnName("LandAccessibility");

                                    b2.Property<string>("LandAccessibilityDesc")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("LandAccessibilityDesc");

                                    b2.Property<decimal?>("RightOfWay")
                                        .HasPrecision(5, 2)
                                        .HasColumnType("decimal(5,2)")
                                        .HasColumnName("RightOfWay");

                                    b2.Property<decimal?>("RoadWidth")
                                        .HasPrecision(5, 2)
                                        .HasColumnType("decimal(5,2)")
                                        .HasColumnName("RoadWidth");

                                    b2.HasKey("LandAccessibilityDetailLandAppraisalDetailId");

                                    b2.ToTable("LandAppraisalDetails", "Appraisal");

                                    b2.WithOwner()
                                        .HasForeignKey("LandAccessibilityDetailLandAppraisalDetailId");
                                });

                            b1.Navigation("FrontageRoad")
                                .IsRequired();
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.LandFillDetail", "LandFillDetail", b1 =>
                        {
                            b1.Property<long>("LandAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<string>("LandFill")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("LandFill");

                            b1.Property<decimal?>("LandFillPct")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("LandFillPct");

                            b1.Property<decimal?>("SoilLevel")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("SoilLevel");

                            b1.HasKey("LandAppraisalDetailId");

                            b1.ToTable("LandAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("LandAppraisalDetailId");
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.LandLimitation", "LandLimitation", b1 =>
                        {
                            b1.Property<long>("LandAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Electricity")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("Electricity");

                            b1.Property<decimal?>("ElectricityDistance")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("ElectricityDistance");

                            b1.Property<bool?>("IsLandlocked")
                                .HasColumnType("bit")
                                .HasColumnName("IsLandlocked");

                            b1.Property<string>("IsLandlockedRemark")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("IsLandlockedRemark");

                            b1.Property<string>("LimitationOther")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LimitationOther");

                            b1.HasKey("LandAppraisalDetailId");

                            b1.ToTable("LandAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("LandAppraisalDetailId");

                            b1.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.Encroachment", "Encroachment", b2 =>
                                {
                                    b2.Property<long>("LandLimitationLandAppraisalDetailId")
                                        .HasColumnType("bigint");

                                    b2.Property<decimal?>("EncroachArea")
                                        .HasPrecision(5, 2)
                                        .HasColumnType("decimal(5,2)")
                                        .HasColumnName("EncroachArea");

                                    b2.Property<bool?>("IsEncroached")
                                        .HasColumnType("bit")
                                        .HasColumnName("IsEncroached");

                                    b2.Property<string>("IsEncroachedRemark")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("IsEncroachedRemark");

                                    b2.HasKey("LandLimitationLandAppraisalDetailId");

                                    b2.ToTable("LandAppraisalDetails", "Appraisal");

                                    b2.WithOwner()
                                        .HasForeignKey("LandLimitationLandAppraisalDetailId");
                                });

                            b1.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.Expropriation", "Expropriation", b2 =>
                                {
                                    b2.Property<long>("LandLimitationLandAppraisalDetailId")
                                        .HasColumnType("bigint");

                                    b2.Property<bool?>("InLineExpropriate")
                                        .HasColumnType("bit")
                                        .HasColumnName("InLineExpropriate");

                                    b2.Property<string>("InLineExpropriateRemark")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("InLineExpropriateRemark");

                                    b2.Property<bool?>("IsExpropriate")
                                        .HasColumnType("bit")
                                        .HasColumnName("IsExpropriate");

                                    b2.Property<string>("IsExpropriateRemark")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("IsExpropriateRemark");

                                    b2.Property<string>("RoyalDecree")
                                        .HasMaxLength(20)
                                        .HasColumnType("nvarchar(20)")
                                        .HasColumnName("RoyalDecree");

                                    b2.HasKey("LandLimitationLandAppraisalDetailId");

                                    b2.ToTable("LandAppraisalDetails", "Appraisal");

                                    b2.WithOwner()
                                        .HasForeignKey("LandLimitationLandAppraisalDetailId");
                                });

                            b1.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.ForestBoundary", "ForestBoundary", b2 =>
                                {
                                    b2.Property<long>("LandLimitationLandAppraisalDetailId")
                                        .HasColumnType("bigint");

                                    b2.Property<bool?>("IsForestBoundary")
                                        .HasColumnType("bit")
                                        .HasColumnName("IsForestBoundary");

                                    b2.Property<string>("IsForestBoundaryRemark")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("IsForestBoundaryRemark");

                                    b2.HasKey("LandLimitationLandAppraisalDetailId");

                                    b2.ToTable("LandAppraisalDetails", "Appraisal");

                                    b2.WithOwner()
                                        .HasForeignKey("LandLimitationLandAppraisalDetailId");
                                });

                            b1.Navigation("Encroachment")
                                .IsRequired();

                            b1.Navigation("Expropriation")
                                .IsRequired();

                            b1.Navigation("ForestBoundary")
                                .IsRequired();
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.LandLocationDetail", "LandLocationDetail", b1 =>
                        {
                            b1.Property<long>("LandAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<decimal?>("Distance")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("Distance");

                            b1.Property<string>("LandCheck")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("LandCheck");

                            b1.Property<string>("LandCheckOther")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("LandCheckOther");

                            b1.Property<string>("LandLocation")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("LandLocation");

                            b1.Property<string>("Location")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Location");

                            b1.Property<string>("Soi")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Soi");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Street");

                            b1.Property<string>("Village")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Village");

                            b1.HasKey("LandAppraisalDetailId");

                            b1.ToTable("LandAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("LandAppraisalDetailId");
                        });

                    b.OwnsOne("Appraisal.AppraisalProperties.ValueObjects.LandMiscellaneousDetail", "LandMiscellaneousDetail", b1 =>
                        {
                            b1.Property<long>("LandAppraisalDetailId")
                                .HasColumnType("bigint");

                            b1.Property<decimal?>("DepthPit")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("DepthPit");

                            b1.Property<string>("HasBuilding")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("HasBuilding");

                            b1.Property<string>("HasBuildingOther")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("HasBuildingOther");

                            b1.Property<decimal?>("PondArea")
                                .HasPrecision(5, 2)
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("PondArea");

                            b1.HasKey("LandAppraisalDetailId");

                            b1.ToTable("LandAppraisalDetails", "Appraisal");

                            b1.WithOwner()
                                .HasForeignKey("LandAppraisalDetailId");
                        });

                    b.Navigation("ConsecutiveArea")
                        .IsRequired();

                    b.Navigation("LandAccessibilityDetail")
                        .IsRequired();

                    b.Navigation("LandFillDetail")
                        .IsRequired();

                    b.Navigation("LandLimitation")
                        .IsRequired();

                    b.Navigation("LandLocationDetail")
                        .IsRequired();

                    b.Navigation("LandMiscellaneousDetail")
                        .IsRequired();

                    b.Navigation("ObligationDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("Appraisal.RequestAppraisals.Models.RequestAppraisal", b =>
                {
                    b.Navigation("BuildingAppraisalDetail")
                        .IsRequired();

                    b.Navigation("CondoAppraisalDetail")
                        .IsRequired();

                    b.Navigation("LandAppraisalDetail")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
